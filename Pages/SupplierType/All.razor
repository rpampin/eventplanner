@page "/supplier-types"
@using EventPlanner.Models
@using EventPlanner.Data
@inject SupplierTypeService supplierTypeService
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-md-8">
        <h3>Supplier types</h3>
    </div>
    <div class="col-md-4" style="text-align: end">
        <a type="button" class="btn btn-primary" href="supplier-type">
            <span class="oi oi-plus"> NEW SUPPLIER TYPE</span>
        </a>
    </div>
</div>

@if (Types is null)
{
    <p><em>Loading... !</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var type in Types)
            {
                <tr>
                    <td>@type.Name</td>
                    <td class="fit">
                        <a type="button" class="btn btn-link" href="supplier-type/@type.Id">
                            <span class="oi oi-pencil"></span>
                        </a>
                    </td>
                    <td class="fit">
                        <button type="button" class="btn btn-link" @onclick="@(e => Delete(@type))">
                            <span class="oi oi-trash"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    IEnumerable<SupplierType> Types;

    protected override async Task OnInitializedAsync()
    {
        Types = await Task.Run(() => supplierTypeService.GetAll());
    }

    protected async void Delete(SupplierType evType)
    {
        await supplierTypeService.DeleteOne(evType);
        NavigationManager.NavigateTo("supplier-types", true);
    }

}
