@page "/event"
@using EventPlanner.Models
@using EventPlanner.Data
@using System.Globalization
@inject EventService eventService
@inject EventTypeService eventTypeService
@inject PackageService packageService
@inject NavigationManager NavigationManager

<div class="title-action">
    <MudText Typo="Typo.h2">New Event</MudText>
    <MudButton Variant="Variant.Text" StartIcon="@Icons.Filled.Close" Color="Color.Transparent" OnClick="Cancel"> Cancel</MudButton>
</div>

@if (Types is null || Packages is null)
{
    <p><em>Loading... !</em></p>
}
else
{
    <EditForm Model="@obj" OnValidSubmit="Insert">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="6">
                        <MudSelect T="EventType" Label="Type" AnchorOrigin="Origin.BottomCenter" @bind-Value="obj.Type" For="@(() => obj.Type)">
                            @foreach (var et in Types)
                            {
                                <MudSelectItem Value="@et">@et.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="6">
                        <MudDatePicker Label="Date" @bind-Date="obj.Date" For="@(() => obj.Date)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudDatePicker Label="PreparationVenue" @bind-Date="obj.PreparationVenue" For="@(() => obj.PreparationVenue)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudTimePicker Label="PreparationTime" @bind-Time="obj.PreparationTime" For="@(() => obj.PreparationTime)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudDatePicker Label="ReceptionVenue" @bind-Date="obj.ReceptionVenue" For="@(() => obj.ReceptionVenue)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudTimePicker Label="ReceptionTime" @bind-Time="obj.ReceptionTime" For="@(() => obj.ReceptionTime)" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField Label="Celebrant" @bind-Value="obj.Celebrant" For="@(() => obj.Celebrant)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudTextField Label="Address" @bind-Value="obj.Address" For="@(() => obj.Address)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudTextField Label="Mobile" @bind-Value="obj.Mobile" For="@(() => obj.Mobile)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudTextField Label="Email" @bind-Value="obj.Email" For="@(() => obj.Email)" />
                    </MudItem>
                    <MudItem xs="3">
                        <MudTextField Label="Social" @bind-Value="obj.Social" For="@(() => obj.Social)" />
                    </MudItem>
                    <MudItem xs="4">
                        <MudSelect T="Package" Label="Package" AnchorOrigin="Origin.BottomCenter" @bind-Value="obj.Package" For="@(() => obj.Package)">
                            @foreach (var p in Packages)
                            {
                                <MudSelectItem Value="@p">@p.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="4">
                        <MudNumericField Label="PackagePrice" Adornment="Adornment.Start" AdornmentText="₱" HideSpinButtons="true" Format="N2" Culture="@_ph" @bind-Value="obj.PackagePrice" For="@(() => obj.PackagePrice)" />
                    </MudItem>
                    <MudItem xs="4">
                        <MudTextField Label="Notes" @bind-Value="obj.Notes" For="@(() => obj.Notes)" />
                    </MudItem>
                    <MudItem xs="4">
                        <MudNumericField Label="DownPayment" Adornment="Adornment.Start" AdornmentText="₱" HideSpinButtons="true" Format="N2" Culture="@_ph" @bind-Value="obj.DownPayment" For="@(() => obj.DownPayment)" />
                    </MudItem>
                    <MudItem xs="4">
                        <MudNumericField Label="AdditionalCharges" Adornment="Adornment.Start" AdornmentText="₱" HideSpinButtons="true" Format="N2" Culture="@_ph" @bind-Value="obj.AdditionalCharges" For="@(() => obj.AdditionalCharges)" />
                    </MudItem>
                    <MudItem xs="4">
                        <MudNumericField Label="Balance" Adornment="Adornment.Start" AdornmentText="₱" HideSpinButtons="true" Format="N2" Culture="@_ph" @bind-Value="obj.Balance" For="@(() => obj.Balance)" />
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Filled.Save" Class="ml-auto">Save</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
}

@code {
    Event obj = new Event();
    IEnumerable<EventType> Types = null;
    IEnumerable<Package> Packages = null;
    CultureInfo _ph = CultureInfo.GetCultureInfo("fil-PH");

    protected override async Task OnInitializedAsync()
    {
        Types = await Task.Run(() => eventTypeService.GetAll());
        Packages = await Task.Run(() => packageService.GetAll());
    }

    protected async void Insert()
    {
        await eventService.InsertOne(obj);
        NavigationManager.NavigateTo("events");
    }

    void Cancel()
        => NavigationManager.NavigateTo("events", true);
}
